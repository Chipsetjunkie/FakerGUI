name: Releases
on:
  push:
    branches:
      - main
jobs:
  release:
   runs-on: ubuntu-latest


   steps:
    - uses: actions/checkout@v3

    - name: Setup Github User Config
      run: |
          git config user.name "Release Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: create release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false'}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
  
  
  publish_npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Fetch latest changes
        run: git pull

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules-publish
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Installing node modules
        run: npm ci

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}